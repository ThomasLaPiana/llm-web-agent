---
# Workflow test - Real end-to-end browser automation testing with session extraction
# Based on actual integration test patterns
base: 'http://localhost:3000'
iterations: 1
concurrency: 1
rampup: 0
timeout: 120

plan:
  # Step 1: Health check
  - name: health_check
    request:
      url: /health
      method: GET
    
  # Step 2: Create a browser session and extract the session ID
  - name: create_session
    request:
      url: /browser/session
      method: POST
      headers:
        Content-Type: 'application/json'
      body: '{}'
    assign: session_response
    
  # Step 3: Navigate using the real session ID (from integration tests)
  - name: navigate_to_httpbin
    request:
      url: /browser/navigate
      method: POST
      headers:
        Content-Type: 'application/json'
      body: |
        {
          "session_id": "{{ session_response.body.session_id }}",
          "url": "https://httpbin.org/html"
        }
    assign: navigate_response
    
  # Step 4: Wait action (from integration tests)
  - name: wait_for_load
    request:
      url: /browser/interact
      method: POST
      headers:
        Content-Type: 'application/json'
      body: |
        {
          "session_id": "{{ session_response.body.session_id }}",
          "action": {
            "type": "Wait",
            "params": {
              "duration_ms": 1000
            }
          }
        }
    assign: wait_response
    
  # Step 5: Get page source (from integration tests)
  - name: get_page_source
    request:
      url: /browser/interact
      method: POST
      headers:
        Content-Type: 'application/json'
      body: |
        {
          "session_id": "{{ session_response.body.session_id }}",
          "action": {
            "type": "GetPageSource"
          }
        }
    assign: source_response
    
  # Step 6: Take screenshot (from integration tests)
  - name: take_screenshot
    request:
      url: /browser/interact
      method: POST
      headers:
        Content-Type: 'application/json'
      body: |
        {
          "session_id": "{{ session_response.body.session_id }}",
          "action": {
            "type": "Screenshot"
          }
        }
    assign: screenshot_response

# Sequential testing with delays for browser operations
delay: '5000..8000'

reports:
  - name: console
  - name: html
    file: drill-workflow-report.html
  - name: json
    file: drill-workflow-report.json 